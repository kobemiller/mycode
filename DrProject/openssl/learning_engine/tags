!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ENGINE_load_hwcipher	engine_test.c	/^void ENGINE_load_hwcipher()$/;"	f
EVP_hw_c	engine_test.c	/^static const EVP_CIPHER EVP_hw_c = $/;"	v	file:
EVP_hw_cipher	engine_test.c	/^const EVP_CIPHER *EVP_hw_cipher()$/;"	f
EVP_hw_md	engine_test.c	/^static EVP_MD *EVP_hw_md()$/;"	f	file:
HW_SET_RSA_PRIVATE_KEY	engine_test.c	166;"	d	file:
HW_set_private_keyID	engine_test.c	488;"	d	file:
bind_helper	engine_test.c	/^static int bind_helper(ENGINE *e)$/;"	f	file:
cipher_nids	engine_test.c	/^static int cipher_nids[] = $/;"	v	file:
digest_nids	engine_test.c	/^static int digest_nids[] = $/;"	v	file:
engine_hw_id	engine_test.c	/^static const char *engine_hw_id = "ID_hw";$/;"	v	file:
engine_hw_name	engine_test.c	/^static const char *engine_hw_name = "hwTest";$/;"	v	file:
engine_hwcipher	engine_test.c	/^static ENGINE *engine_hwcipher()$/;"	f	file:
final	engine_test.c	/^static int final(EVP_MD_CTX *ctx, unsigned char *md)$/;"	f	file:
generate_rsa_key	engine_test.c	/^static int generate_rsa_key(RSA *rsa, int bits, BIGNUM *e, BN_GENCB *cb)$/;"	f	file:
hw_cipher_enc	engine_test.c	/^static int hw_cipher_enc(EVP_CIPHER_CTX *ctx, unsigned char *out, const unsigned char *in, unsigned int inl)$/;"	f	file:
hw_ciphers	engine_test.c	/^static int hw_ciphers(ENGINE *e, const EVP_CIPHER **cipher, const int **nids, int nid)$/;"	f	file:
hw_cmd_defns	engine_test.c	/^static const ENGINE_CMD_DEFN hw_cmd_defns[] = $/;"	v	file:
hw_ctrl	engine_test.c	/^static int hw_ctrl(ENGINE *e, int cmd, long i, void *p, void (*f)(void))$/;"	f	file:
hw_destroy	engine_test.c	/^static int hw_destroy(ENGINE *e)$/;"	f	file:
hw_finish	engine_test.c	/^static int hw_finish(ENGINE *e)$/;"	f	file:
hw_get_random_bytes	engine_test.c	/^static int hw_get_random_bytes(unsigned char *buf, int num)$/;"	f	file:
hw_init	engine_test.c	/^static int hw_init(ENGINE *e)$/;"	f	file:
hw_init_key	engine_test.c	/^static int hw_init_key(EVP_CIPHER_CTX *ctx, const unsigned char *key, const unsigned char *iv, int enc)$/;"	f	file:
hw_load_privkey	engine_test.c	/^static EVP_PKEY *hw_load_privkey(ENGINE *e, const char *key_id, $/;"	f	file:
hw_load_pubkey	engine_test.c	/^static EVP_PKEY *hw_load_pubkey(ENGINE *e, const char *key_id, UI_METHOD *ui_method, void *callback_data)$/;"	f	file:
hw_md	engine_test.c	/^static int hw_md(ENGINE *e, const EVP_MD **digest, const int **nids, int nid)$/;"	f	file:
hw_newmd	engine_test.c	/^static const EVP_MD hw_newmd =$/;"	v	file:
hw_rand	engine_test.c	/^static RAND_METHOD hw_rand = $/;"	v	file:
hw_rsa	engine_test.c	/^RSA_METHOD hw_rsa = $/;"	v
init	engine_test.c	/^static int init(EVP_MD_CTX *ctx)$/;"	f	file:
main	engine_test.c	/^int main()$/;"	f
mySign	engine_test.c	/^int mySign(int type, const unsigned char *m, unsigned int m_length, unsigned char *sigret, unsigned int *siglen, void *key)$/;"	f
myVerify	engine_test.c	/^int myVerify(int type, const unsigned char *m, unsigned int m_length,$/;"	f
rsa_priv_dec	engine_test.c	/^int rsa_priv_dec(int flen, const unsigned char *from, unsigned char *to, RSA *rsa, int padding)$/;"	f
rsa_priv_enc	engine_test.c	/^int rsa_priv_enc(int flen, const unsigned char *from, unsigned char *to, RSA *rsa, int padding)$/;"	f
rsa_pub_dec	engine_test.c	/^int rsa_pub_dec(int flen, const unsigned char *from, unsigned char *to, RSA *rsa, int padding)$/;"	f
rsa_pub_enc	engine_test.c	/^int rsa_pub_enc(int flen, const unsigned char *from, unsigned char *to, RSA *rsa, int padding)$/;"	f
update	engine_test.c	/^static int update(EVP_MD_CTX *ctx, const void *data, size_t count)$/;"	f	file:
